class TranslationService {
  constructor() {
    this.apiKey = null;
    this.translationCache = {};
    this.lastRequestTime = 0;
    this.rateLimit = 200; // ms between requests
  }

  async translateText(text, targetLanguage) {
    try {
      // Check cache first
      const cacheKey = `${text}_${targetLanguage}`;
      if (this.translationCache[cacheKey]) {
        return this.translationCache[cacheKey];
      }

      // Rate limiting
      const now = Date.now();
      const timeSinceLastRequest = now - this.lastRequestTime;
      if (timeSinceLastRequest < this.rateLimit) {
        await new Promise(resolve => setTimeout(resolve, this.rateLimit - timeSinceLastRequest));
      }

      console.log(`üåê Translating "${text}" to ${targetLanguage}`);
      
      // Try LibreTranslate API (free, no key required)
      try {
        const response = await fetch('https://libretranslate.de/translate', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            q: text,
            source: 'en',
            target: targetLanguage,
            format: 'text'
          })
        });

        if (response.ok) {
          const data = await response.json();
          const translation = data.translatedText || text;
          this.translationCache[cacheKey] = translation;
          this.lastRequestTime = Date.now();
          console.log(`‚úÖ Translated "${text}" to ${targetLanguage}: "${translation}"`);
          return translation;
        }
      } catch (error) {
        console.log('LibreTranslate failed, trying fallback...');
      }

      // Fallback to MyMemory API (also free)
      try {
        const url = `https://api.mymemory.translated.net/get?q=${encodeURIComponent(text)}&langpair=en|${targetLanguage}`;
        const response = await fetch(url);
        
        if (response.ok) {
          const data = await response.json();
          const translation = data.responseData?.translatedText || text;
          this.translationCache[cacheKey] = translation;
          this.lastRequestTime = Date.now();
          console.log(`‚úÖ Translated "${text}" to ${targetLanguage}: "${translation}"`);
          return translation;
        }
      } catch (error) {
        console.log('MyMemory API failed, using local dictionary...');
      }

      // Final fallback to local dictionary
      const localTranslation = this.getLocalTranslation(text, targetLanguage);
      this.translationCache[cacheKey] = localTranslation;
      return localTranslation;
      
    } catch (error) {
      console.error('Translation error:', error);
      return text;
    }
  }

  async getExampleSentence(word, targetLanguage) {
    try {
      console.log(`üìù Getting example sentence for "${word}" in ${targetLanguage}`);
      
      // Create varied example sentences
      const sentenceTemplates = [
        `I can see a ${word}.`,
        `This is a ${word}.`,
        `The ${word} is here.`,
        `There is a ${word} in the room.`,
        `I need a ${word}.`,
        `Where is the ${word}?`,
        `That ${word} looks nice.`,
        `I like this ${word}.`,
        `The ${word} is very useful.`,
        `Can you show me the ${word}?`
      ];
      
      // Pick a random template
      const englishSentence = sentenceTemplates[Math.floor(Math.random() * sentenceTemplates.length)];
      
      // Translate the sentence to target language
      const translatedSentence = await this.translateText(englishSentence, targetLanguage);
      
      return {
        english: englishSentence,
        translated: translatedSentence
      };
      
    } catch (error) {
      console.error('Example sentence error:', error);
      return {
        english: `I can see a ${word}.`,
        translated: `I can see a ${word}.`
      };
    }
  }

  getLocalTranslation(text, targetLanguage) {
    const translations = {
      'es': {
        // Electronics
        'cell phone': 'tel√©fono m√≥vil',
        'laptop': 'port√°til',
        'computer': 'computadora',
        'tv': 'televisor',
        'keyboard': 'teclado',
        'mouse': 'rat√≥n',
        'camera': 'c√°mara',
        'headphones': 'auriculares',
        
        // Food & Drinks
        'cup': 'taza',
        'bottle': 'botella',
        'apple': 'manzana',
        'banana': 'pl√°tano',
        'orange': 'naranja',
        'pizza': 'pizza',
        'coffee': 'caf√©',
        'water': 'agua',
        
        // Furniture
        'chair': 'silla',
        'table': 'mesa',
        'couch': 'sof√°',
        'bed': 'cama',
        'desk': 'escritorio',
        'cupboard': 'armario',
        'wardrobe': 'guardarropa',
        'light fixture': 'l√°mpara',
        'lamp': 'l√°mpara',
        
        // Common Objects
        'book': 'libro',
        'pen': 'bol√≠grafo',
        'door': 'puerta',
        'window': 'ventana',
        'car': 'coche',
        'clock': 'reloj',
        'glasses': 'gafas',
        'bag': 'bolso',
        
        // Animals
        'cat': 'gato',
        'dog': 'perro',
        'bird': 'p√°jaro',
        
        // Person
        'person': 'persona',
        'man': 'hombre',
        'woman': 'mujer',
        'child': 'ni√±o'
      },
      'fr': {
        // Electronics
        'cell phone': 't√©l√©phone portable',
        'laptop': 'ordinateur portable',
        'computer': 'ordinateur',
        'tv': 't√©l√©vision',
        'keyboard': 'clavier',
        'mouse': 'souris',
        'camera': 'appareil photo',
        'headphones': '√©couteurs',
        
        // Food & Drinks
        'cup': 'tasse',
        'bottle': 'bouteille',
        'apple': 'pomme',
        'banana': 'banane',
        'orange': 'orange',
        'pizza': 'pizza',
        'coffee': 'caf√©',
        'water': 'eau',
        
        // Furniture
        'chair': 'chaise',
        'table': 'table',
        'couch': 'canap√©',
        'bed': 'lit',
        'desk': 'bureau',
        'cupboard': 'placard',
        'wardrobe': 'armoire',
        'light fixture': 'luminaire',
        'lamp': 'lampe',
        
        // Common Objects
        'book': 'livre',
        'pen': 'stylo',
        'door': 'porte',
        'window': 'fen√™tre',
        'car': 'voiture',
        'clock': 'horloge',
        'glasses': 'lunettes',
        'bag': 'sac',
        
        // Animals
        'cat': 'chat',
        'dog': 'chien',
        'bird': 'oiseau',
        
        // Person
        'person': 'personne',
        'man': 'homme',
        'woman': 'femme',
        'child': 'enfant'
      },
      'de': {
        // Electronics
        'cell phone': 'Handy',
        'laptop': 'Laptop',
        'computer': 'Computer',
        'tv': 'Fernseher',
        'keyboard': 'Tastatur',
        'mouse': 'Maus',
        'camera': 'Kamera',
        'headphones': 'Kopfh√∂rer',
        
        // Food & Drinks
        'cup': 'Tasse',
        'bottle': 'Flasche',
        'apple': 'Apfel',
        'banana': 'Banane',
        'orange': 'Orange',
        'pizza': 'Pizza',
        'coffee': 'Kaffee',
        'water': 'Wasser',
        
        // Furniture
        'chair': 'Stuhl',
        'table': 'Tisch',
        'couch': 'Sofa',
        'bed': 'Bett',
        'desk': 'Schreibtisch',
        'cupboard': 'Schrank',
        'wardrobe': 'Kleiderschrank',
        'light fixture': 'Leuchte',
        'lamp': 'Lampe',
        
        // Common Objects
        'book': 'Buch',
        'pen': 'Stift',
        'door': 'T√ºr',
        'window': 'Fenster',
        'car': 'Auto',
        'clock': 'Uhr',
        'glasses': 'Brille',
        'bag': 'Tasche',
        
        // Animals
        'cat': 'Katze',
        'dog': 'Hund',
        'bird': 'Vogel',
        
        // Person
        'person': 'Person',
        'man': 'Mann',
        'woman': 'Frau',
        'child': 'Kind'
      },
      'it': {
        // Electronics
        'cell phone': 'cellulare',
        'laptop': 'portatile',
        'computer': 'computer',
        'tv': 'televisore',
        'keyboard': 'tastiera',
        'mouse': 'mouse',
        'camera': 'fotocamera',
        'headphones': 'cuffie',
        
        // Food & Drinks
        'cup': 'tazza',
        'bottle': 'bottiglia',
        'apple': 'mela',
        'banana': 'banana',
        'orange': 'arancia',
        'pizza': 'pizza',
        'coffee': 'caff√®',
        'water': 'acqua',
        
        // Furniture
        'chair': 'sedia',
        'table': 'tavolo',
        'couch': 'divano',
        'bed': 'letto',
        'desk': 'scrivania',
        'cupboard': 'credenza',
        'wardrobe': 'armadio',
        'light fixture': 'lampada',
        'lamp': 'lampada',
        
        // Common Objects
        'book': 'libro',
        'pen': 'penna',
        'door': 'porta',
        'window': 'finestra',
        'car': 'auto',
        'clock': 'orologio',
        'glasses': 'occhiali',
        'bag': 'borsa',
        
        // Animals
        'cat': 'gatto',
        'dog': 'cane',
        'bird': 'uccello',
        
        // Person
        'person': 'persona',
        'man': 'uomo',
        'woman': 'donna',
        'child': 'bambino'
      },
      'pt': {
        // Electronics
        'cell phone': 'celular',
        'laptop': 'laptop',
        'computer': 'computador',
        'tv': 'televis√£o',
        'keyboard': 'teclado',
        'mouse': 'mouse',
        'camera': 'c√¢mera',
        'headphones': 'fones de ouvido',
        
        // Food & Drinks
        'cup': 'x√≠cara',
        'bottle': 'garrafa',
        'apple': 'ma√ß√£',
        'banana': 'banana',
        'orange': 'laranja',
        'pizza': 'pizza',
        'coffee': 'caf√©',
        'water': '√°gua',
        
        // Furniture
        'chair': 'cadeira',
        'table': 'mesa',
        'couch': 'sof√°',
        'bed': 'cama',
        'desk': 'escrivaninha',
        'cupboard': 'arm√°rio',
        'wardrobe': 'guarda-roupa',
        'light fixture': 'lumin√°ria',
        'lamp': 'l√¢mpada',
        
        // Common Objects
        'book': 'livro',
        'pen': 'caneta',
        'door': 'porta',
        'window': 'janela',
        'car': 'carro',
        'clock': 'rel√≥gio',
        'glasses': '√≥culos',
        'bag': 'bolsa',
        
        // Animals
        'cat': 'gato',
        'dog': 'cachorro',
        'bird': 'p√°ssaro',
        
        // Person
        'person': 'pessoa',
        'man': 'homem',
        'woman': 'mulher',
        'child': 'crian√ßa'
      },
      'ru': {
        // Electronics
        'cell phone': '–º–æ–±–∏–ª—å–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω',
        'laptop': '–Ω–æ—É—Ç–±—É–∫',
        'computer': '–∫–æ–º–ø—å—é—Ç–µ—Ä',
        'tv': '—Ç–µ–ª–µ–≤–∏–∑–æ—Ä',
        'keyboard': '–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞',
        'mouse': '–º—ã—à—å',
        'camera': '–∫–∞–º–µ—Ä–∞',
        'headphones': '–Ω–∞—É—à–Ω–∏–∫–∏',
        
        // Food & Drinks
        'cup': '—á–∞—à–∫–∞',
        'bottle': '–±—É—Ç—ã–ª–∫–∞',
        'apple': '—è–±–ª–æ–∫–æ',
        'banana': '–±–∞–Ω–∞–Ω',
        'orange': '–∞–ø–µ–ª—å—Å–∏–Ω',
        'pizza': '–ø–∏—Ü—Ü–∞',
        'coffee': '–∫–æ—Ñ–µ',
        'water': '–≤–æ–¥–∞',
        
        // Furniture
        'chair': '—Å—Ç—É–ª',
        'table': '—Å—Ç–æ–ª',
        'couch': '–¥–∏–≤–∞–Ω',
        'bed': '–∫—Ä–æ–≤–∞—Ç—å',
        'desk': '–ø–∏—Å—å–º–µ–Ω–Ω—ã–π —Å—Ç–æ–ª',
        'cupboard': '—à–∫–∞—Ñ',
        'wardrobe': '–≥–∞—Ä–¥–µ—Ä–æ–±',
        'light fixture': '—Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫',
        'lamp': '–ª–∞–º–ø–∞',
        
        // Common Objects
        'book': '–∫–Ω–∏–≥–∞',
        'pen': '—Ä—É—á–∫–∞',
        'door': '–¥–≤–µ—Ä—å',
        'window': '–æ–∫–Ω–æ',
        'car': '–º–∞—à–∏–Ω–∞',
        'clock': '—á–∞—Å—ã',
        'glasses': '–æ—á–∫–∏',
        'bag': '—Å—É–º–∫–∞',
        
        // Animals
        'cat': '–∫–æ—Ç',
        'dog': '—Å–æ–±–∞–∫–∞',
        'bird': '–ø—Ç–∏—Ü–∞',
        
        // Person
        'person': '—á–µ–ª–æ–≤–µ–∫',
        'man': '–º—É–∂—á–∏–Ω–∞',
        'woman': '–∂–µ–Ω—â–∏–Ω–∞',
        'child': '—Ä–µ–±–µ–Ω–æ–∫'
      },
      'ja': {
        // Electronics
        'cell phone': 'Êê∫Â∏ØÈõªË©±',
        'laptop': '„Éé„Éº„Éà„Éë„ÇΩ„Ç≥„É≥',
        'computer': '„Ç≥„É≥„Éî„É•„Éº„Çø„Éº',
        'tv': '„ÉÜ„É¨„Éì',
        'keyboard': '„Ç≠„Éº„Éú„Éº„Éâ',
        'mouse': '„Éû„Ç¶„Çπ',
        'camera': '„Ç´„É°„É©',
        'headphones': '„Éò„ÉÉ„Éâ„Éï„Ç©„É≥',
        
        // Food & Drinks
        'cup': '„Ç´„ÉÉ„Éó',
        'bottle': '„Éú„Éà„É´',
        'apple': '„Çä„Çì„Åî',
        'banana': '„Éê„Éä„Éä',
        'orange': '„Ç™„É¨„É≥„Ç∏',
        'pizza': '„Éî„Ç∂',
        'coffee': '„Ç≥„Éº„Éí„Éº',
        'water': 'Ê∞¥',
        
        // Furniture
        'chair': 'Ê§ÖÂ≠ê',
        'table': '„ÉÜ„Éº„Éñ„É´',
        'couch': '„ÇΩ„Éï„Ç°',
        'bed': '„Éô„ÉÉ„Éâ',
        'desk': 'Êú∫',
        'cupboard': 'È£üÂô®Ê£ö',
        'wardrobe': '„ÉØ„Éº„Éâ„É≠„Éº„Éñ',
        'light fixture': 'ÁÖßÊòéÂô®ÂÖ∑',
        'lamp': '„É©„É≥„Éó',
        
        // Common Objects
        'book': 'Êú¨',
        'pen': '„Éö„É≥',
        'door': '„Éâ„Ç¢',
        'window': 'Á™ì',
        'car': 'Ëªä',
        'clock': 'ÊôÇË®à',
        'glasses': '„É°„Ç¨„Éç',
        'bag': '„Éê„ÉÉ„Ç∞',
        
        // Animals
        'cat': 'Áå´',
        'dog': 'Áä¨',
        'bird': 'È≥•',
        
        // Person
        'person': '‰∫∫',
        'man': 'Áî∑ÊÄß',
        'woman': 'Â•≥ÊÄß',
        'child': 'Â≠ê‰æõ'
      },
      'zh-CN': {
        // Electronics
        'cell phone': 'ÊâãÊú∫',
        'laptop': 'Á¨îËÆ∞Êú¨ÁîµËÑë',
        'computer': 'ÁîµËÑë',
        'tv': 'ÁîµËßÜ',
        'keyboard': 'ÈîÆÁõò',
        'mouse': 'Èº†Ê†á',
        'camera': 'Áõ∏Êú∫',
        'headphones': 'ËÄ≥Êú∫',
        
        // Food & Drinks
        'cup': 'ÊùØÂ≠ê',
        'bottle': 'Áì∂Â≠ê',
        'apple': 'ËãπÊûú',
        'banana': 'È¶ôËïâ',
        'orange': 'Ê©ôÂ≠ê',
        'pizza': 'Êä´Ëê®',
        'coffee': 'ÂíñÂï°',
        'water': 'Ê∞¥',
        
        // Furniture
        'chair': 'Ê§ÖÂ≠ê',
        'table': 'Ê°åÂ≠ê',
        'couch': 'Ê≤ôÂèë',
        'bed': 'Â∫ä',
        'desk': '‰π¶Ê°å',
        'cupboard': 'Ê©±Êüú',
        'wardrobe': 'Ë°£Êüú',
        'light fixture': 'ÁÅØÂÖ∑',
        'lamp': 'ÁÅØ',
        
        // Common Objects
        'book': '‰π¶',
        'pen': 'Á¨î',
        'door': 'Èó®',
        'window': 'Á™óÊà∑',
        'car': 'Ê±ΩËΩ¶',
        'clock': 'Èíü',
        'glasses': 'ÁúºÈïú',
        'bag': 'ÂåÖ',
        
        // Animals
        'cat': 'Áå´',
        'dog': 'Áãó',
        'bird': 'È∏ü',
        
        // Person
        'person': '‰∫∫',
        'man': 'Áî∑‰∫∫',
        'woman': 'Â•≥‰∫∫',
        'child': 'Â≠©Â≠ê'
      }
    };

    const lowerText = text.toLowerCase();
    const translation = translations[targetLanguage]?.[lowerText];
    
    if (translation) {
      console.log(`‚úÖ Local translation: "${text}" ‚Üí "${translation}"`);
      return translation;
    }
    
    console.log(`‚ö†Ô∏è No local translation for "${text}" in ${targetLanguage}`);
    return text;
  }

  getSupportedLanguages() {
    return {
      'Spanish': 'es',
      'French': 'fr',
      'German': 'de',
      'Italian': 'it',
      'Portuguese': 'pt',
      'Russian': 'ru',
      'Japanese': 'ja',
      'Chinese (Simplified)': 'zh-CN'
    };
  }
}

export default new TranslationService();